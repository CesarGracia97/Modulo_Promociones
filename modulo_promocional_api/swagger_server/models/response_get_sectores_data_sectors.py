# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class ResponseGetSectoresDataSECTORS(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, sector_id: int=None, sector: str=None, ciudad: str=None):  # noqa: E501
        """ResponseGetSectoresDataSECTORS - a model defined in Swagger

        :param sector_id: The sector_id of this ResponseGetSectoresDataSECTORS.  # noqa: E501
        :type sector_id: int
        :param sector: The sector of this ResponseGetSectoresDataSECTORS.  # noqa: E501
        :type sector: str
        :param ciudad: The ciudad of this ResponseGetSectoresDataSECTORS.  # noqa: E501
        :type ciudad: str
        """
        self.swagger_types = {
            'sector_id': int,
            'sector': str,
            'ciudad': str
        }

        self.attribute_map = {
            'sector_id': 'SECTOR_ID',
            'sector': 'SECTOR',
            'ciudad': 'CIUDAD'
        }
        self._sector_id = sector_id
        self._sector = sector
        self._ciudad = ciudad

    @classmethod
    def from_dict(cls, dikt) -> 'ResponseGetSectoresDataSECTORS':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ResponseGetSectores_Data_SECTORS of this ResponseGetSectoresDataSECTORS.  # noqa: E501
        :rtype: ResponseGetSectoresDataSECTORS
        """
        return util.deserialize_model(dikt, cls)

    @property
    def sector_id(self) -> int:
        """Gets the sector_id of this ResponseGetSectoresDataSECTORS.


        :return: The sector_id of this ResponseGetSectoresDataSECTORS.
        :rtype: int
        """
        return self._sector_id

    @sector_id.setter
    def sector_id(self, sector_id: int):
        """Sets the sector_id of this ResponseGetSectoresDataSECTORS.


        :param sector_id: The sector_id of this ResponseGetSectoresDataSECTORS.
        :type sector_id: int
        """

        self._sector_id = sector_id

    @property
    def sector(self) -> str:
        """Gets the sector of this ResponseGetSectoresDataSECTORS.


        :return: The sector of this ResponseGetSectoresDataSECTORS.
        :rtype: str
        """
        return self._sector

    @sector.setter
    def sector(self, sector: str):
        """Sets the sector of this ResponseGetSectoresDataSECTORS.


        :param sector: The sector of this ResponseGetSectoresDataSECTORS.
        :type sector: str
        """

        self._sector = sector

    @property
    def ciudad(self) -> str:
        """Gets the ciudad of this ResponseGetSectoresDataSECTORS.


        :return: The ciudad of this ResponseGetSectoresDataSECTORS.
        :rtype: str
        """
        return self._ciudad

    @ciudad.setter
    def ciudad(self, ciudad: str):
        """Sets the ciudad of this ResponseGetSectoresDataSECTORS.


        :param ciudad: The ciudad of this ResponseGetSectoresDataSECTORS.
        :type ciudad: str
        """

        self._ciudad = ciudad
