# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class RequestGetUpgrade(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, channel: str=None, type: str=None, tariffplan: int=None, tariffplanvariant: int=None):  # noqa: E501
        """RequestGetUpgrade - a model defined in Swagger

        :param channel: The channel of this RequestGetUpgrade.  # noqa: E501
        :type channel: str
        :param type: The type of this RequestGetUpgrade.  # noqa: E501
        :type type: str
        :param tariffplan: The tariffplan of this RequestGetUpgrade.  # noqa: E501
        :type tariffplan: int
        :param tariffplanvariant: The tariffplanvariant of this RequestGetUpgrade.  # noqa: E501
        :type tariffplanvariant: int
        """
        self.swagger_types = {
            'channel': str,
            'type': str,
            'tariffplan': int,
            'tariffplanvariant': int
        }

        self.attribute_map = {
            'channel': 'channel',
            'type': 'type',
            'tariffplan': 'TARIFFPLAN',
            'tariffplanvariant': 'TARIFFPLANVARIANT'
        }
        self._channel = channel
        self._type = type
        self._tariffplan = tariffplan
        self._tariffplanvariant = tariffplanvariant

    @classmethod
    def from_dict(cls, dikt) -> 'RequestGetUpgrade':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The RequestGetUpgrade of this RequestGetUpgrade.  # noqa: E501
        :rtype: RequestGetUpgrade
        """
        return util.deserialize_model(dikt, cls)

    @property
    def channel(self) -> str:
        """Gets the channel of this RequestGetUpgrade.


        :return: The channel of this RequestGetUpgrade.
        :rtype: str
        """
        return self._channel

    @channel.setter
    def channel(self, channel: str):
        """Sets the channel of this RequestGetUpgrade.


        :param channel: The channel of this RequestGetUpgrade.
        :type channel: str
        """
        if channel is None:
            raise ValueError("Invalid value for `channel`, must not be `None`")  # noqa: E501

        self._channel = channel

    @property
    def type(self) -> str:
        """Gets the type of this RequestGetUpgrade.


        :return: The type of this RequestGetUpgrade.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type: str):
        """Sets the type of this RequestGetUpgrade.


        :param type: The type of this RequestGetUpgrade.
        :type type: str
        """
        if type is None:
            raise ValueError("Invalid value for `type`, must not be `None`")  # noqa: E501

        self._type = type

    @property
    def tariffplan(self) -> int:
        """Gets the tariffplan of this RequestGetUpgrade.


        :return: The tariffplan of this RequestGetUpgrade.
        :rtype: int
        """
        return self._tariffplan

    @tariffplan.setter
    def tariffplan(self, tariffplan: int):
        """Sets the tariffplan of this RequestGetUpgrade.


        :param tariffplan: The tariffplan of this RequestGetUpgrade.
        :type tariffplan: int
        """
        if tariffplan is None:
            raise ValueError("Invalid value for `tariffplan`, must not be `None`")  # noqa: E501

        self._tariffplan = tariffplan

    @property
    def tariffplanvariant(self) -> int:
        """Gets the tariffplanvariant of this RequestGetUpgrade.


        :return: The tariffplanvariant of this RequestGetUpgrade.
        :rtype: int
        """
        return self._tariffplanvariant

    @tariffplanvariant.setter
    def tariffplanvariant(self, tariffplanvariant: int):
        """Sets the tariffplanvariant of this RequestGetUpgrade.


        :param tariffplanvariant: The tariffplanvariant of this RequestGetUpgrade.
        :type tariffplanvariant: int
        """
        if tariffplanvariant is None:
            raise ValueError("Invalid value for `tariffplanvariant`, must not be `None`")  # noqa: E501

        self._tariffplanvariant = tariffplanvariant
