# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.data_television import DataTELEVISION  # noqa: F401,E501
from swagger_server import util


class AllOfDataPostDiccionarioDatosTelevision(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, plan: int=None):  # noqa: E501
        """AllOfDataPostDiccionarioDatosTelevision - a model defined in Swagger

        :param plan: The plan of this AllOfDataPostDiccionarioDatosTelevision.  # noqa: E501
        :type plan: int
        """
        self.swagger_types = {
            'plan': int
        }

        self.attribute_map = {
            'plan': 'Plan'
        }
        self._plan = plan

    @classmethod
    def from_dict(cls, dikt) -> 'AllOfDataPostDiccionarioDatosTelevision':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The AllOfDataPostDiccionarioDatosTelevision of this AllOfDataPostDiccionarioDatosTelevision.  # noqa: E501
        :rtype: AllOfDataPostDiccionarioDatosTelevision
        """
        return util.deserialize_model(dikt, cls)

    @property
    def plan(self) -> int:
        """Gets the plan of this AllOfDataPostDiccionarioDatosTelevision.


        :return: The plan of this AllOfDataPostDiccionarioDatosTelevision.
        :rtype: int
        """
        return self._plan

    @plan.setter
    def plan(self, plan: int):
        """Sets the plan of this AllOfDataPostDiccionarioDatosTelevision.


        :param plan: The plan of this AllOfDataPostDiccionarioDatosTelevision.
        :type plan: int
        """
        if plan is None:
            raise ValueError("Invalid value for `plan`, must not be `None`")  # noqa: E501

        self._plan = plan
