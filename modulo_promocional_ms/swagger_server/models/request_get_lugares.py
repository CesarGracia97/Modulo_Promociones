# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class RequestGetLugares(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, external_transaction_id: str=None, channel: str=None, type: str=None, id_provs: List[int]=None, id_cities: List[int]=None, v1: int=None, v2: int=None, v3: int=None):  # noqa: E501
        """RequestGetLugares - a model defined in Swagger

        :param external_transaction_id: The external_transaction_id of this RequestGetLugares.  # noqa: E501
        :type external_transaction_id: str
        :param channel: The channel of this RequestGetLugares.  # noqa: E501
        :type channel: str
        :param type: The type of this RequestGetLugares.  # noqa: E501
        :type type: str
        :param id_provs: The id_provs of this RequestGetLugares.  # noqa: E501
        :type id_provs: List[int]
        :param id_cities: The id_cities of this RequestGetLugares.  # noqa: E501
        :type id_cities: List[int]
        :param v1: The v1 of this RequestGetLugares.  # noqa: E501
        :type v1: int
        :param v2: The v2 of this RequestGetLugares.  # noqa: E501
        :type v2: int
        :param v3: The v3 of this RequestGetLugares.  # noqa: E501
        :type v3: int
        """
        self.swagger_types = {
            'external_transaction_id': str,
            'channel': str,
            'type': str,
            'id_provs': List[int],
            'id_cities': List[int],
            'v1': int,
            'v2': int,
            'v3': int
        }

        self.attribute_map = {
            'external_transaction_id': 'externalTransactionId',
            'channel': 'channel',
            'type': 'type',
            'id_provs': 'id_Provs:',
            'id_cities': 'id_Cities:',
            'v1': '_V1',
            'v2': '_V2',
            'v3': '_V3'
        }
        self._external_transaction_id = external_transaction_id
        self._channel = channel
        self._type = type
        self._id_provs = id_provs
        self._id_cities = id_cities
        self._v1 = v1
        self._v2 = v2
        self._v3 = v3

    @classmethod
    def from_dict(cls, dikt) -> 'RequestGetLugares':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The RequestGetLugares of this RequestGetLugares.  # noqa: E501
        :rtype: RequestGetLugares
        """
        return util.deserialize_model(dikt, cls)

    @property
    def external_transaction_id(self) -> str:
        """Gets the external_transaction_id of this RequestGetLugares.


        :return: The external_transaction_id of this RequestGetLugares.
        :rtype: str
        """
        return self._external_transaction_id

    @external_transaction_id.setter
    def external_transaction_id(self, external_transaction_id: str):
        """Sets the external_transaction_id of this RequestGetLugares.


        :param external_transaction_id: The external_transaction_id of this RequestGetLugares.
        :type external_transaction_id: str
        """
        if external_transaction_id is None:
            raise ValueError("Invalid value for `external_transaction_id`, must not be `None`")  # noqa: E501

        self._external_transaction_id = external_transaction_id

    @property
    def channel(self) -> str:
        """Gets the channel of this RequestGetLugares.


        :return: The channel of this RequestGetLugares.
        :rtype: str
        """
        return self._channel

    @channel.setter
    def channel(self, channel: str):
        """Sets the channel of this RequestGetLugares.


        :param channel: The channel of this RequestGetLugares.
        :type channel: str
        """
        if channel is None:
            raise ValueError("Invalid value for `channel`, must not be `None`")  # noqa: E501

        self._channel = channel

    @property
    def type(self) -> str:
        """Gets the type of this RequestGetLugares.


        :return: The type of this RequestGetLugares.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type: str):
        """Sets the type of this RequestGetLugares.


        :param type: The type of this RequestGetLugares.
        :type type: str
        """
        if type is None:
            raise ValueError("Invalid value for `type`, must not be `None`")  # noqa: E501

        self._type = type

    @property
    def id_provs(self) -> List[int]:
        """Gets the id_provs of this RequestGetLugares.


        :return: The id_provs of this RequestGetLugares.
        :rtype: List[int]
        """
        return self._id_provs

    @id_provs.setter
    def id_provs(self, id_provs: List[int]):
        """Sets the id_provs of this RequestGetLugares.


        :param id_provs: The id_provs of this RequestGetLugares.
        :type id_provs: List[int]
        """

        self._id_provs = id_provs

    @property
    def id_cities(self) -> List[int]:
        """Gets the id_cities of this RequestGetLugares.


        :return: The id_cities of this RequestGetLugares.
        :rtype: List[int]
        """
        return self._id_cities

    @id_cities.setter
    def id_cities(self, id_cities: List[int]):
        """Sets the id_cities of this RequestGetLugares.


        :param id_cities: The id_cities of this RequestGetLugares.
        :type id_cities: List[int]
        """

        self._id_cities = id_cities

    @property
    def v1(self) -> int:
        """Gets the v1 of this RequestGetLugares.


        :return: The v1 of this RequestGetLugares.
        :rtype: int
        """
        return self._v1

    @v1.setter
    def v1(self, v1: int):
        """Sets the v1 of this RequestGetLugares.


        :param v1: The v1 of this RequestGetLugares.
        :type v1: int
        """

        self._v1 = v1

    @property
    def v2(self) -> int:
        """Gets the v2 of this RequestGetLugares.


        :return: The v2 of this RequestGetLugares.
        :rtype: int
        """
        return self._v2

    @v2.setter
    def v2(self, v2: int):
        """Sets the v2 of this RequestGetLugares.


        :param v2: The v2 of this RequestGetLugares.
        :type v2: int
        """

        self._v2 = v2

    @property
    def v3(self) -> int:
        """Gets the v3 of this RequestGetLugares.


        :return: The v3 of this RequestGetLugares.
        :rtype: int
        """
        return self._v3

    @v3.setter
    def v3(self, v3: int):
        """Sets the v3 of this RequestGetLugares.


        :param v3: The v3 of this RequestGetLugares.
        :type v3: int
        """

        self._v3 = v3
